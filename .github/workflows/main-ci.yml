name: Verdict360 CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test-web:
    name: Lint and Test Web
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./web
        run: npm ci
      
      - name: Lint
        working-directory: ./web
        run: npm run lint
      
      - name: Type check
        working-directory: ./web
        run: npx tsc --noEmit
      
      - name: Run tests
        working-directory: ./web
        run: npm test || true

  lint-and-test-api:
    name: Lint and Test API
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: verdict360_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'api/requirements.txt'
      
      - name: Install dependencies
        working-directory: ./api
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Lint with flake8
        working-directory: ./api
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Run tests
        working-directory: ./api
        run: |
          pytest || true
  
  lint-and-test-mobile:
    name: Lint and Test Mobile
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'mobile/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./mobile
        run: npm ci
      
      - name: Run ESLint
        working-directory: ./mobile
        run: npx eslint . || true
      
      - name: Type check
        working-directory: ./mobile
        run: npx tsc --noEmit
      
      - name: Run tests
        working-directory: ./mobile
        run: npm test || true
